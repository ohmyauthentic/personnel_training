<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://java.sun.com/xml/ns/javaee" xmlns:web="http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd" xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd" version="3.0">
  <display-name></display-name>
  <welcome-file-list>
    <welcome-file>login.jsp</welcome-file>
  </welcome-file-list>
 
  <filter>
    <filter-name>struts_prepare</filter-name>
    <filter-class>
  		org.apache.struts2.dispatcher.ng.filter.StrutsPrepareFilter
  	</filter-class>  	
  </filter>
  <filter>
     <filter-name>siteMesh</filter-name>
     <filter-class>com.opensymphony.module.sitemesh.filter.PageFilter</filter-class>
    <!--<filter-class>com.opensymphony.sitemesh.webapp.SiteMeshFilter</filter-class>-->
  </filter>
  <filter>
    <filter-name>struts_execute</filter-name>
    <filter-class>
  		org.apache.struts2.dispatcher.ng.filter.StrutsExecuteFilter
  	</filter-class>  	
  </filter>
  <filter-mapping>
    <filter-name>struts_prepare</filter-name>
    <url-pattern>/*</url-pattern>
  </filter-mapping>  
  <filter-mapping>
     <filter-name>siteMesh</filter-name>
     <url-pattern>/*</url-pattern>
  </filter-mapping>
  <filter-mapping>
    <filter-name>struts_execute</filter-name>
    <url-pattern>/*</url-pattern>
  </filter-mapping>
  
  <listener>
	 <listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
  </listener>
  <context-param>
     <param-name>contextConfigLocation</param-name>
     <param-value>/WEB-INF/applicationContext.xml</param-value>
  </context-param>
  
  <servlet>
      <servlet-name>AuthImg</servlet-name>
      <servlet-class>cn.edu.njust.Session.AuthImg</servlet-class>
  </servlet>
  <servlet-mapping>
        <servlet-name>AuthImg</servlet-name>
        <url-pattern>/AuthImg</url-pattern>
  </servlet-mapping>
  
  <servlet>
      <servlet-name>AjaxCheckUser</servlet-name>
      <servlet-class>cn.edu.njust.bean.AjaxCheckUser</servlet-class>
  </servlet>
  <servlet-mapping>
        <servlet-name>AjaxCheckUser</servlet-name>
        <url-pattern>/AjaxCheckUser.do</url-pattern>
  </servlet-mapping>
  
  <servlet>
      <servlet-name>AjaxCheckPassword</servlet-name>
      <servlet-class>cn.edu.njust.bean.AjaxCheckPassword</servlet-class>
  </servlet>
  <servlet-mapping>
        <servlet-name>AjaxCheckPassword</servlet-name>
        <url-pattern>/AjaxCheckPassword.do</url-pattern>
  </servlet-mapping>
  
  <filter>
	   <filter-name>character</filter-name>
	   <filter-class>cn.edu.njust.Filter.CharacterEncodingFilter</filter-class>
	   <init-param>
	       <param-name>encoding</param-name>
	       <param-value>GBK</param-value>
	   </init-param>
	</filter>	
	<filter-mapping>
	   <filter-name>character</filter-name>
	   <url-pattern>/*</url-pattern>
	</filter-mapping>
   
	<filter>
	   <filter-name>UserFilter</filter-name>
	   <filter-class>cn.edu.njust.Filter.UserFilter</filter-class>
	</filter>	
	<filter-mapping>
	   <filter-name>UserFilter</filter-name>
	   <url-pattern>*.jsp</url-pattern>
	</filter-mapping>
	<filter-mapping>
	   <filter-name>UserFilter</filter-name>
	   <url-pattern>*.action</url-pattern>
	</filter-mapping>
	<!--  
	<filter>
	   <filter-name>ActionFilter</filter-name>
	   <filter-class>cn.edu.njust.Filter.ActionFilter</filter-class>
	</filter>	
	<filter-mapping>
	   <filter-name>ActionFilter</filter-name>
	   <url-pattern>*.action</url-pattern>
	</filter-mapping>
  -->
  
  
 <filter>  
    <filter-name>hibernateFilter</filter-name>  
    <filter-class>org.springframework.orm.hibernate3.support.OpenSessionInViewFilter </filter-class>  
    <init-param>  
       <param-name>sessionFactoryBeanName</param-name>  
       <param-value>sessionFactory</param-value>  
    </init-param>  
    <init-param>  
         <param-name>singleSession</param-name>  
         <param-value>true</param-value>  
    </init-param>  
    <init-param>  
       <param-name>FlushMode</param-name>  
       <param-value>AUTO</param-value>  
    </init-param> 
   </filter> 
   <filter-mapping>  
        <filter-name>hibernateFilter</filter-name>  
        <url-pattern>/*</url-pattern>  
   </filter-mapping>  
  
</web-app>